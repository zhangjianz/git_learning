0x00创本地版本库
 在指定目录下 开启gitbash
  mkdir git_learning
 进入该目录
  cd git_learning
 初始化git目录(会生成隐藏文件.git，含stage暂存区等版本管理关键模块）
  git init
--------------------
0x11第一次修改：
  在工作区做完修改后，执行两个指令。1.git add lessson0.txt 2.git commit -m 'add lessson0.txt to stage'
  第一条指令是将修改写入stage暂存区，第二个指令才是提交到git版本历史记录里。	
--------------------
第二次修改
  三个git指令：1.git diff 查看工作目录（working dirctory)与暂存区域(stage)快照的差异   2.git diff --cached 查看暂存区域与上次提交时的快照之间的差异  3.git status 查看当前工作目录下文件的在还没被git管理的文件（指git add xxx/git commit --m 'xxx'等）
--------------------
测试版本回退的修改
  git status是用来告诉用户某次修改工作流的指令，比如这次修改是否加入暂存区（add指令），或者是否提交至当前分支的（commit）。git add -A加入当前目录下的所有修改文件。这样就不用一个个写文件名。回退到上一个commit的状态的指令：git reset --hard HEAD^
-----------------
checkout的使用：
  主要两种使用情境。1.在changes to be committed状态下使用git checkout -- lesson0.txt 则会使文件回到stage之后的状态，意思是stage后的修改将会被撤销2.在changes not staged for commit状态下,此时使用git checkout -- lesson0.txt 则会使该文件的修改取消。在nothing to commit.working directory clean状态下，此时如果想取消修改的方法有如下：git reset --hard #hash(回退到某一次commit状态） git reset --hard HEAD(回退到上一次提交时的状态）

---------------------
ssh的作用：
  ssh-key分为公钥与私钥，主要作用是让我们更方便的登录ssh服务器（无需每次输入密码且保证安全性）。公钥是放置在所需要连接的ssh服务器上，私钥则放在本地。作用原理是用户将自己的公钥存储在远程主机上，登陆的时候，远程主机会向用户发送一段随机字符串，用户用自己的私钥加密会再发回来。远程主机用事先存储的公钥进行解密，如果成功就证明用户是可信的，直接运行登录。但这样会产生如果你不是本机的root用户，那么你的私钥可以被root用户使用，或者你的电脑正在被别人使用，所以添加个passphrase用于二次验证是很有必要的。

---------------------
从远程库克隆：
  git clone git@github.com:username/repo_name.git

在git服务器新建库时可以选择将其余本地库关联：
  git remote add origin git@github.com:username/repo_name.git
  git push -u origin master

----------------------
创建于合并分支：
创建branchX分支：git checkout -b branchX
查看当前仓库的分支情况：git branch 在显示出的分支中前面有星号的代表当前分支
从远程仓库中拉取branchX分支到本地（如果本地没有branchX分支则会自动创建branchX分支）：git fetch origin branchX:branchX
拉取最新的远程分支：git fetch origin branchX
查看本地的branchX分支与远程branchX的区别：git diff branchX origin/branchX
合并从远程仓库拉取的分支与本地分支：git merge branchX
分支合并：git merger命令用于合并指定分支到当前分支
删除分支 git branch -d <name>
test for branch master